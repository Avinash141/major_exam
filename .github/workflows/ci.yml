name: MLOps CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-suite:
    name: Run Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests with pytest
      run: |
        pytest tests/ -v --tb=short
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          .pytest_cache/
          test-results.xml
        retention-days: 30

  train-and-quantize:
    name: Train Model and Run Quantization
    runs-on: ubuntu-latest
    needs: test-suite
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Train model
      run: |
        python src/train.py
    
    - name: Run quantization
      run: |
        python src/quantize.py
    
    - name: Verify model artifacts
      run: |
        ls -la *.joblib
        echo "Model artifacts created successfully"
    
    - name: Upload model artifacts
      uses: actions/upload-artifact@v4
      with:
        name: model-artifacts
        path: |
          *.joblib
        retention-days: 30

  build-and-test-container:
    name: Build and Test Docker Container
    runs-on: ubuntu-latest
    needs: train-and-quantize
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Download model artifacts
      uses: actions/download-artifact@v4
      with:
        name: model-artifacts
        path: .
    
    - name: Verify artifacts downloaded
      run: |
        ls -la *.joblib
        echo "Artifacts downloaded successfully"
    
    - name: Build Docker image
      run: |
        docker build -t mlops-assignment:latest .
    
    - name: Test container with predict.py
      run: |
        docker run --rm mlops-assignment:latest
    
    - name: Test container with training
      run: |
        docker run --rm mlops-assignment:latest python src/train.py
    
    - name: Test container with quantization
      run: |
        docker run --rm mlops-assignment:latest python src/quantize.py
    
    - name: Container health check
      run: |
        echo "All container tests passed successfully!"